

NNAAMMEE
       db_load - the DB database loader

SSYYNNOOPPSSIISS
       ddbb__llooaadd [--cc nnaammee==vvaalluuee]
            [--ff ffiillee] [--hh hhoommee] [--tt bbttrreeee || hhaasshh] db_file

DDEESSCCRRIIPPTTIIOONN
       The  _d_b___l_o_a_d  utility  reads  from  the standard input and
       loads it into the database _d_b___f_i_l_e.  The input to  _d_b___l_o_a_d
       must have been created by the _d_b___d_u_m_p or _d_b___d_u_m_p_1_8_5 utili-
       ties (see _d_b___d_u_m_p(1) for more information).

       The options are as follows:

       --cc   Specify configuration options for the DB_INFO  struc-
            ture  provided to _d_b___o_p_e_n(3), ignoring any value they
            may have based on the input.  The command-line format
            is  ``name=value''.   Supported  keywords  are listed
            below.

       --ff   Read from the specified _i_n_p_u_t file  instead  of  from
            the standard input.

       --hh   Specify a home directory for the database.

       --tt   Specify  the  underlying  access  method.   If  no --tt
            option is specified, the database will be loaded into
            a  database  of  the same type as was dumped, e.g., a
            hash database will be created if a hash database  was
            dumped.   Btree  and  hash databases may be converted
            from one to the other.   Recno  databases  cannot  be
            converted to any other database type.

       The _d_b___l_o_a_d utility exits 0 on success, and >0 if an error
       occurs.

KKEEYYWWOORRDDSS
       The following keywords are supported for the  --cc  command-
       line  option.   See  _d_b___o_p_e_n(3)  for further discussion of
       these keywords and what values should be specified.

       The parenthetical listing specifies how the value part  of
       the  ``name=value''  pair is interpreted.  Items listed as
       (boolean) expect value to be ``1'' (set) or ``0'' (unset).
       Items listed as (number) convert value to a number.  Items
       listed as (string) use the characters of value directly.

       bt_minkey
            The minimum number of keys per page (number).

       db_lorder
            The byte order for integers in  the  stored  database
            metadata (number).

       db_pagesize
            The  size  of  pages  used  for nodes in the tree, in
            bytes (number).
       duplicates
            The value of the DB_DUP flag (boolean).

       h_ffactor
            The density within the hash table (number).

       h_nelem
            The size of the hash table (number).

       re_len
            Specify fixed-length records of the specified  length
            (number).

       re_pad
            Specify   the   fixed-length   record  pad  character
            (string).

       recnum
            The value of the DB_RECNUM flag (boolean).

       renumber
            The value of the DB_RENUMBER flag (boolean).

EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
       The following environment variables affect  the  execution
       of _d_b___l_o_a_d:

       DB_HOME
            If the --hh option is not specified and the environment
            variable _D_B___H_O_M_E is set, it is used as  the  path  of
            the database home, as described in _d_b___a_p_p_i_n_i_t(3).

SSEEEE AALLSSOO
       The  DB  library  is  a family of groups of functions that
       provides a modular programming interface  to  transactions
       and  record-oriented  file  access.   The library includes
       support for transactions, locking, logging and  file  page
       caching,  as well as various indexed access methods.  Many
       of the functional groups  (e.g.,  the  file  page  caching
       functions)  are  useful  independent of the other DB func-
       tions, although  some  functional  groups  are  explicitly
       based  on  other functional groups (e.g., transactions and
       logging).  For a general description of  the  DB  package,
       see _d_b___i_n_t_r_o(3).

       _d_b___a_r_c_h_i_v_e(1), _d_b___c_h_e_c_k_p_o_i_n_t(1), _d_b___d_e_a_d_l_o_c_k(1), _d_b___d_u_m_p(1),
       _d_b___l_o_a_d(1), _d_b___r_e_c_o_v_e_r(1), _d_b___s_t_a_t(1), _d_b___i_n_t_r_o(3),
       _d_b___a_p_p_i_n_i_t(3), _d_b___c_u_r_s_o_r(3), _d_b___d_b_m(3), _d_b___i_n_t_e_r_n_a_l(3),
       _d_b___l_o_c_k(3), _d_b___l_o_g(3), _d_b___m_p_o_o_l(3), _d_b___o_p_e_n(3), _d_b___t_h_r_e_a_d(3),
       _d_b___t_x_n(3)
